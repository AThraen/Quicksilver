@model EPiServer.Reference.Commerce.Site.Features.ResetPassword.Models.ResetPasswordLinkViewModel
<div class="row">
    <div class="col-md-12 col-sm-12">
        @if (Model.Success)
        {
            <h1>@Html.PropertyFor(x => x.CurrentBlock.DoneTitle)</h1>
            <p>@Html.PropertyFor(x => x.CurrentBlock.DoneBody)</p>
        }
        else
        {
            <h1>@Html.PropertyFor(x => x.CurrentBlock.MainTitle)</h1>
            <p>@Html.PropertyFor(x => x.CurrentBlock.MainBody)</p>
            using (Html.BeginForm("Index", "ResetPasswordLink", new {node = Model.CurrentPageLink}, FormMethod.Post))
            {
                @Html.HiddenFor(x => x.FormModel.Hash)
                <div class="form-group">
                    @Html.HiddenFor(x => x.FormModel.Hash)
                    @Html.LabelFor(x => x.FormModel.Password)
                    @Html.PasswordFor(x => x.FormModel.Password, !Model.InvalidHash ? (object) new {@class = "form-control"} : new {@class = "form-control", @disabled = "disabled"})
                    @Html.ValidationMessageFor(x => x.FormModel.Password)
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.FormModel.Password2)
                    @Html.PasswordFor(x => x.FormModel.Password2, !Model.InvalidHash ? (object) new {@class = "form-control"} : new {@class = "form-control", @disabled = "disabled"})
                    @Html.ValidationMessageFor(x => x.FormModel.Password2)
                </div>
                <p>
                    @Html.ValidationMessage("FormModel.Error")</p>
                <button type="submit" class="btn" @{if (Model.InvalidHash) {<text>disabled = "disabled"</text> }}>@Html.Translate("/ResetPassword/Form/Label/Send")</button>
            }
        }
    </div>
</div>