@using System.Web
@model EPiServer.Reference.Commerce.Site.Features.Product.Models.FashionProductViewModel

<div class="row">
    <div class="product-details jsProductDetails">
        <div class="col-xs-12 col-md-6 product-details__media">
            <img src="@Model.Images.First()">

            </div>              
            
        <div class="col-md-6 product-info">
            <h3>@Html.PropertyFor(x => x.Variation.DisplayName)</h3>
            <p>
                @Html.PropertyFor(x => x.Product.Description)
            </p>
            <p>
                <strong>SKU:</strong> @Html.PropertyFor(x => x.Variation.Code)
            </p>
            <ul class="block-list">
                <li>@Html.PropertyFor(x => x.Product.Brand)</li>
                <li>@Html.PropertyFor(x => x.Product.LongDescription)</li>
            </ul>
            @using (Html.BeginForm("SelectVariant", "Product"))
            {
                <div class="form-group">
                    <label for="Color">@Html.Translate("/ProductPage/VariationSelection/Color")</label>
                    @Html.DropDownListFor(x => x.Color, Model.Colors, new { @class = "form-control jsVariationSwitch" })
                </div>
                <div class="form-group">
                    <label for="Size">@Html.Translate("/ProductPage/VariationSelection/Size")</label>
                    @Html.DropDownListFor(x => x.Size, Model.Sizes, new { @class = "form-control jsVariationSwitch" })
                </div>
            }
                
            @if (Model.Price < Model.OriginalPrice)
            {
                <p class="original-price">@Html.Translate("/ProductPage/OriginalPrice")  <strong>@Model.OriginalPrice.ToString()</strong></p>
                <p class="discount-price">@Html.Translate("/ProductPage/DiscountPrice")  <strong>@Model.Price.ToString()</strong></p>
            }
            else
            {
            <p>@Html.Translate("/ProductPage/Price")  <strong>@Model.Price.ToString()</strong></p>
            }    
            <p class="shopping-button">
                @using (Html.BeginForm("AddToCart", "Cart", FormMethod.Post, new { @class = "form-inline jsAddToCart" }))
                {
                    @Html.Hidden("code", Model.Variation.Code)
                    <button type="submit" role="button" class="btn btn--blue">@Html.Translate("/Product/Button/AddToCart")<span class="cart-icon"></span></button>
                }
                @if (User.Identity.IsAuthenticated)
                {
                    using (Html.BeginForm("AddToWishList", "WishList", FormMethod.Post, new {@class = "form-inline jsAddToWishList"}))
                    {
                    @Html.Hidden("code", Model.Variation.Code)
                    <button type="submit" role="button" class="btn btn--blue">@Html.Translate("/Product/Button/AddToWishList")<span class="star-icon"></span></button>
                    <div style="display: none;" class="jsWishListResult alert"></div>
                }
                }
            </p>
                
        </div>      
    </div>
</div>

@section Meta {
    @if (Model != null) 
    { 
	 <meta property="description" content="@Html.AttributeEncode(Model.Product.Description)" />
	}
}